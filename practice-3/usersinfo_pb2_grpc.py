# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import usersinfo_pb2 as usersinfo__pb2


class UserInfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Username = channel.unary_unary(
                '/UserInfo/Username',
                request_serializer=usersinfo__pb2.UserRequest.SerializeToString,
                response_deserializer=usersinfo__pb2.UserRequest.FromString,
                )


class UserInfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Username(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Username': grpc.unary_unary_rpc_method_handler(
                    servicer.Username,
                    request_deserializer=usersinfo__pb2.UserRequest.FromString,
                    response_serializer=usersinfo__pb2.UserRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UserInfo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInfo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Username(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserInfo/Username',
            usersinfo__pb2.UserRequest.SerializeToString,
            usersinfo__pb2.UserRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ProductInfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Products = channel.unary_unary(
                '/ProductInfo/Products',
                request_serializer=usersinfo__pb2.ProductRequest.SerializeToString,
                response_deserializer=usersinfo__pb2.ProductRequest.FromString,
                )


class ProductInfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Products(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductInfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Products': grpc.unary_unary_rpc_method_handler(
                    servicer.Products,
                    request_deserializer=usersinfo__pb2.ProductRequest.FromString,
                    response_serializer=usersinfo__pb2.ProductRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProductInfo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductInfo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Products(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/Products',
            usersinfo__pb2.ProductRequest.SerializeToString,
            usersinfo__pb2.ProductRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
